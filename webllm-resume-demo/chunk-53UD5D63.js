import{e as S,f as A,g as Q}from"./chunk-RXYL2DHZ.js";import"./chunk-CGV4DF4N.js";import"./chunk-EUEAUTY2.js";import{$ as c,$a as w,Ga as f,La as g,Sa as _,Ua as y,Ya as t,Za as o,aa as u,ab as h,bb as q,cb as E,db as p,lb as s,ma as a,ob as x,pb as P,qb as L,sb as D,wa as C}from"./chunk-DUE3TLKX.js";function b(n,m){if(n&1){let e=q();t(0,"app-llm-response",2),L("queryChange",function(i){c(e);let r=p();return P(r.query,i)||(r.query=i),u(i)}),w(1,3),s(2,"Let's write some code"),h(),o()}if(n&2){let e=p();_("engine",e.engine())("systemPrompt",e.systemPrompt()),x("query",e.query)}}function M(n,m){n&1&&(t(0,"p"),s(1,"--- No engine loaded ---"),o())}var d=class n{engine=a(void 0);systemPrompt=a('You are a helpful assistant who can solve any coding problem. If you do not know the answer, please reply "I do not know" and stop.');query=a("Please write a function to add two numbers and return the result. Please do not use any built-in function.");static \u0275fac=function(e){return new(e||n)};static \u0275cmp=f({type:n,selectors:[["app-coder-qa"]],features:[D([S])],decls:5,vars:1,consts:[[3,"selectedEngine"],[3,"engine","systemPrompt","query"],[3,"queryChange","engine","systemPrompt","query"],["title",""]],template:function(e,l){e&1&&(t(0,"h2"),s(1,"Coder LLM"),o(),t(2,"app-llm-cache-usage",0),E("selectedEngine",function(r){return l.engine.set(r)}),o(),g(3,b,3,3,"app-llm-response",1)(4,M,2,0,"p")),e&2&&(C(3),y(l.engine()?3:4))},dependencies:[A,Q],encapsulation:2,changeDetection:0})};export{d as default};
