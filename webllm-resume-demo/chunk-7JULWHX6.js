import{d as S,e as A,g as Q}from"./chunk-RPRBSOYP.js";import"./chunk-7LIK5GOD.js";import"./chunk-UFW4LOUU.js";import{$ as c,Ha as g,Ma as f,Ta as _,Va as y,Za as t,_a as o,aa as u,ab as w,bb as h,cb as q,db as E,eb as l,ma as a,nb as s,qb as x,rb as L,sb as P,ub as D,wa as C}from"./chunk-7XO67NS5.js";function M(n,m){if(n&1){let e=q();t(0,"app-llm-response",2),P("queryChange",function(i){c(e);let r=l();return L(r.query,i)||(r.query=i),u(i)}),w(1,3),s(2,"Let's write some code"),h(),o()}if(n&2){let e=l();_("engine",e.engine())("systemPrompt",e.systemPrompt()),x("query",e.query)}}function T(n,m){n&1&&(t(0,"p"),s(1,"--- No engine loaded ---"),o())}var d=class n{engine=a(void 0);systemPrompt=a('You are a helpful assistant who can solve any coding problem. If you do not know the answer, please reply "I do not know" and stop.');query=a("Please write a function to merge sort a list of numbers in ascending order.");static \u0275fac=function(e){return new(e||n)};static \u0275cmp=g({type:n,selectors:[["app-coder-qa"]],features:[D([S])],decls:5,vars:1,consts:[[3,"selectedEngine"],[3,"engine","systemPrompt","query"],[3,"queryChange","engine","systemPrompt","query"],["title",""]],template:function(e,p){e&1&&(t(0,"h2"),s(1,"Coder LLM"),o(),t(2,"app-llm-cache-usage",0),E("selectedEngine",function(r){return p.engine.set(r)}),o(),f(3,M,3,3,"app-llm-response",1)(4,T,2,0,"p")),e&2&&(C(3),y(p.engine()?3:4))},dependencies:[A,Q],encapsulation:2,changeDetection:0})};export{d as default};
